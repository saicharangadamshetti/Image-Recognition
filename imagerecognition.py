# -*- coding: utf-8 -*-
"""ImageRecognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18uWfXHnd-87QPqGDfXbjumXsLxboVdxp
"""

import keras
import numpy as np
import cv2
from google.colab.patches import cv2_imshow
from keras.applications import VGG19
from keras.applications import ResNet50
from keras.applications.vgg19 import preprocess_input
from keras.applications.resnet50 import preprocess_input
from keras.preprocessing.image import img_to_array, load_img
from keras.applications import imagenet_utils

def get_image_vector_vgg19(img_path):
    vgg19_model = VGG19(weights='imagenet')
    img = load_img(img_path, target_size=(224, 224))
    img = img_to_array(img)
    img = np.expand_dims(img, axis=0)
    img = preprocess_input(img)
    img_vec= vgg19_model.predict(img)
    return img_vec

def get_image_vector_resnet50(img_path):
    resnet50_model = ResNet50(weights='imagenet')
    img = load_img(img_path, target_size=(224, 224))
    img = img_to_array(img)
    img = np.expand_dims(img, axis=0)
    img = preprocess_input(img)
    img_vec= resnet50_model.predict(img)
    return img_vec

def decode_display_predictions(img_path,img_vec):
    predictions = imagenet_utils.decode_predictions(img_vec)
    img = cv2.imread(img_path, cv2.IMREAD_UNCHANGED)
    cv2_imshow(img)
    for (i, (imagenetID, label, prob)) in enumerate(predictions[0]):
      print("{}. {}: {:.2f}%".format(i + 1, label, prob * 100))

decode_display_predictions('Mountain.jpg',get_image_vector_vgg19('Mountain.jpg'))

decode_display_predictions('Car.jpg',get_image_vector_vgg19('Car.jpg'))

decode_display_predictions('Mountain.jpg',get_image_vector_resnet50('Mountain.jpg'))

decode_display_predictions('Car.jpg',get_image_vector_resnet50('Car.jpg'))
